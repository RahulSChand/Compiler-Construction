%include 'printing_reading.asm'
section .bss
nline	RESB	1
tempIp	RESB	20
baseOfStack	RESB	1

section .text
global _start
_start:
MOV EBP,baseOfStack
MOV AL,0AH
MOV EBX,nline
MOV [EBX],AL
MOV AX,1
MOV [EBP + 40],AX
MOV AX,0
MOV [EBP + 42],AX
MOV AX,0
MOV [EBP + 44],AX
MOV AX,0
MOV [EBP + 46],AX
MOV AX,1
MOV [EBP + 48],AX
MOV AX,0
MOV [EBP + 50],AX
MOV AX,0
MOV [EBP + 52],AX
MOV AX,0
MOV [EBP + 54],AX
MOV AX,1
MOV [EBP + 56],AX

MOV AX,[EBP + 40]
MOV [EBP + 0],AX
MOV AX,[EBP + 42]
MOV [EBP + 2],AX
MOV AX,[EBP + 44]
MOV [EBP + 4],AX
MOV AX,[EBP + 46]
MOV [EBP + 6],AX
MOV AX,[EBP + 48]
MOV [EBP + 8],AX
MOV AX,[EBP + 50]
MOV [EBP + 10],AX
MOV AX,[EBP + 52]
MOV [EBP + 12],AX
MOV AX,[EBP + 54]
MOV [EBP + 14],AX
MOV AX,[EBP + 56]
MOV [EBP + 16],AX

MOV EBX,EBP
ADD EBX,0
MOV [EBP + 60],EBX 

MOV EAX,[EBP+60]
MOV EBX,0
ADD EAX,EBX
MOV [EBP+64],EAX

MOV EBX,[EBP + 64]
MOV AX,[EBX]
MOV [EBP + 58], AX

MOV AX,[EBP + 58]
MOV [EBP + 20],AX

MOV EBX,EBP
ADD EBX,0
MOV [EBP + 70],EBX 

MOV EAX,[EBP+70]
MOV EBX,8
ADD EAX,EBX
MOV [EBP+74],EAX

MOV EBX,[EBP + 74]
MOV AX,[EBX]
MOV [EBP + 68], AX

MOV AX,[EBP + 68]
MOV [EBP + 22],AX

MOV EBX,EBP
ADD EBX,0
MOV [EBP + 80],EBX 

MOV EAX,[EBP+80]
MOV EBX,16
ADD EAX,EBX
MOV [EBP+84],EAX

MOV EBX,[EBP + 84]
MOV AX,[EBX]
MOV [EBP + 78], AX

MOV AX,[EBP + 78]
MOV [EBP + 24],AX

MOV EBX,EBP
ADD EBX,0
MOV [EBP + 90],EBX 

MOV EAX,[EBP+90]
MOV EBX,6
ADD EAX,EBX
MOV [EBP+94],EAX

MOV EBX,[EBP + 94]
MOV AX,[EBX]
MOV [EBP + 88], AX

MOV AX,[EBP + 88]
MOV [EBP + 26],AX

MOV EBX,EBP
ADD EBX,0
MOV [EBP + 100],EBX 

MOV EAX,[EBP+100]
MOV EBX,12
ADD EAX,EBX
MOV [EBP+104],EAX

MOV EBX,[EBP + 104]
MOV AX,[EBX]
MOV [EBP + 98], AX

MOV AX,[EBP + 98]
MOV [EBP + 28],AX

MOV EBX,EBP
ADD EBX,0
MOV [EBP + 110],EBX 

MOV EAX,[EBP+110]
MOV EBX,2
ADD EAX,EBX
MOV [EBP+114],EAX

MOV EBX,[EBP + 114]
MOV AX,[EBX]
MOV [EBP + 108], AX

MOV AX,[EBP + 108]
MOV [EBP + 30],AX

MOV EBX,EBP
ADD EBX,0
MOV [EBP + 120],EBX 

MOV EAX,[EBP+120]
MOV EBX,14
ADD EAX,EBX
MOV [EBP+124],EAX

MOV EBX,[EBP + 124]
MOV AX,[EBX]
MOV [EBP + 118], AX

MOV AX,[EBP + 118]
MOV [EBP + 32],AX

MOV EBX,EBP
ADD EBX,0
MOV [EBP + 130],EBX 

MOV EAX,[EBP+130]
MOV EBX,4
ADD EAX,EBX
MOV [EBP+134],EAX

MOV EBX,[EBP + 134]
MOV AX,[EBX]
MOV [EBP + 128], AX

MOV AX,[EBP + 128]
MOV [EBP + 34],AX

MOV EBX,EBP
ADD EBX,0
MOV [EBP + 140],EBX 

MOV EAX,[EBP+140]
MOV EBX,10
ADD EAX,EBX
MOV [EBP+144],EAX

MOV EBX,[EBP + 144]
MOV AX,[EBX]
MOV [EBP + 138], AX

MOV AX,[EBP + 138]
MOV [EBP + 36],AX

MOV AX,0
MOV [EBP + 148],AX

MOV AX,[EBP + 148]
MOV [EBP + 18],AX

MOV AX,[EBP + 20]
MOV BX,1
CMP AX,BX
JE L2
JMP L0

L2:
MOV AX,[EBP + 22]
MOV BX,1
CMP AX,BX
JE L3
JMP L0

L3:
MOV AX,[EBP + 24]
MOV BX,1
CMP AX,BX
JE L1
JMP L0

L1:
MOV AX,[EBP + 26]
MOV BX,0
CMP AX,BX
JE L6
JMP L4

L6:
MOV AX,[EBP + 28]
MOV BX,0
CMP AX,BX
JE L5
JMP L4

L5:
MOV AX,[EBP + 30]
MOV BX,0
CMP AX,BX
JE L9
JMP L7

L9:
MOV AX,[EBP + 32]
MOV BX,0
CMP AX,BX
JE L8
JMP L7

L8:
MOV AX,[EBP + 34]
MOV BX,0
CMP AX,BX
JE L12
JMP L10

L12:
MOV AX,[EBP + 36]
MOV BX,0
CMP AX,BX
JE L11
JMP L10

L11:
MOV AX,1
MOV [EBP + 150],AX

MOV AX,[EBP + 150]
MOV [EBP + 18],AX

L10:
L7:
L4:
L0:
XOR EAX,EAX
MOV AX,[EBP + 18]
CALL iprintLF

MOV EAX,1
MOV EBX,0
INT 80H
